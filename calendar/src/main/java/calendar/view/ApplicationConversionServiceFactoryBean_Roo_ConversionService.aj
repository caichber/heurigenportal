// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package calendar.view;

import calendar.model.Heuriger;
import calendar.model.OpenTime;
import calendar.model.OpenTimeRecurring;
import calendar.model.SystemAuthority;
import calendar.model.SystemUser;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new HeurigerConverter());
        registry.addConverter(new OpenTimeConverter());
        registry.addConverter(new OpenTimeRecurringConverter());
        registry.addConverter(new SystemAuthorityConverter());
        registry.addConverter(new SystemUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class calendar.view.ApplicationConversionServiceFactoryBean.HeurigerConverter implements Converter<Heuriger, String> {
        public String convert(Heuriger heuriger) {
            return new StringBuilder().append(heuriger.getName()).toString();
        }
        
    }
    
    static class calendar.view.ApplicationConversionServiceFactoryBean.OpenTimeConverter implements Converter<OpenTime, String> {
        public String convert(OpenTime openTime) {
            return new StringBuilder().append(openTime.getBeginTime1()).append(" ").append(openTime.getEndTime1()).append(" ").append(openTime.getBeginTime2()).append(" ").append(openTime.getEndTime2()).toString();
        }
        
    }
    
    static class calendar.view.ApplicationConversionServiceFactoryBean.OpenTimeRecurringConverter implements Converter<OpenTimeRecurring, String> {
        public String convert(OpenTimeRecurring openTimeRecurring) {
            return new StringBuilder().append(openTimeRecurring.getBeginTime1()).append(" ").append(openTimeRecurring.getEndTime1()).append(" ").append(openTimeRecurring.getBeginTime2()).append(" ").append(openTimeRecurring.getEndTime2()).toString();
        }
        
    }
    
    static class calendar.view.ApplicationConversionServiceFactoryBean.SystemAuthorityConverter implements Converter<SystemAuthority, String> {
        public String convert(SystemAuthority systemAuthority) {
            return new StringBuilder().append(systemAuthority.getAuthority()).toString();
        }
        
    }
    
    static class calendar.view.ApplicationConversionServiceFactoryBean.SystemUserConverter implements Converter<SystemUser, String> {
        public String convert(SystemUser systemUser) {
            return new StringBuilder().append(systemUser.getPassword()).append(" ").append(systemUser.getUsername()).toString();
        }
        
    }
    
}
